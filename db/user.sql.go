// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: user.sql

package db

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users(
    username,
    password,
    fullname,
    email, 
    gender,
    role_id,
    avt
) VALUES (
    $1, $2, $3, $4, $5, $6, $7
) RETURNING id, username, password, fullname, email, gender, role_id, describe, avt, create_at
`

type CreateUserParams struct {
	Username string         `json:"username"`
	Password string         `json:"password"`
	Fullname string         `json:"fullname"`
	Email    sql.NullString `json:"email"`
	Gender   int32          `json:"gender"`
	RoleID   int32          `json:"role_id"`
	Avt      string         `json:"avt"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.Username,
		arg.Password,
		arg.Fullname,
		arg.Email,
		arg.Gender,
		arg.RoleID,
		arg.Avt,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Password,
		&i.Fullname,
		&i.Email,
		&i.Gender,
		&i.RoleID,
		&i.Describe,
		&i.Avt,
		&i.CreateAt,
	)
	return i, err
}
